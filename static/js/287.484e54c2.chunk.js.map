{"version":3,"file":"static/js/287.484e54c2.chunk.js","mappings":"sNACA,EAAuB,uB,6BCGR,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,SAC9B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAS,CAACJ,KAAAA,EAAME,OAAAA,GAEhBG,EAAoB,SAAAC,GACtB,MAAwBA,EAAEC,OAAlBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MACd,OAAQR,GACJ,IAAK,OACDC,EAAQO,GACR,MACJ,IAAK,SACDL,EAAUK,GACV,MACJ,QACI,OAEX,EAQKC,EAAQ,WACVR,EAAQ,IACRE,EAAU,GACb,EAEG,OACI,kBAAML,SAZO,SAAAQ,GACjBA,EAAEI,iBACFZ,EAASM,GACTK,GACH,EAQqCE,UAAWC,EAAzC,WACI,SAACC,EAAA,EAAD,CACEC,KAAK,OACLd,KAAK,OACLQ,MAAOR,EACPe,QAAQ,yHACRC,MAAM,yIACNC,SAAUZ,EACVa,MAAM,UAER,SAACL,EAAA,EAAD,CACEC,KAAK,MACLd,KAAK,SACLQ,MAAON,EACPa,QAAQ,yFACRC,MAAM,+FACNC,SAAUZ,EACVa,MAAM,YAER,SAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYN,KAAK,SAAjC,2BAGf,CCzDD,MAAuB,uBAAvB,EAAqD,uBCcrD,EAXiB,SAAC,GAAD,IAAEO,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,gBAAZ,OACjB,wBACKD,EAASE,KAAI,gBAAEC,EAAF,EAAEA,GAAIxB,EAAN,EAAMA,KAAME,EAAZ,EAAYA,OAAZ,OACd,gBAAaS,UAAWC,EAAxB,WACI,eAAGD,UAAWC,EAAd,UAAyBZ,EAAzB,KAAiCE,MACjC,SAACiB,EAAA,EAAD,CAAQC,QAAQ,WAAWN,KAAK,SAASW,QAAS,kBAAMH,EAAgBE,EAAtB,EAAlD,sBAFKA,EADK,KAFD,ECHjB,GAAgB,OAAS,wBCkBrBE,EAAS,WAGX,IAH0B,IAAdC,EAAc,uDAAP,GACfH,EAAK,GACLI,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWJ,IAC3CA,KAAQ,CACb,IAAIK,EAAqB,GAAdJ,EAAMD,GAEfH,GADEQ,EAAO,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAET,CACD,OAAOR,CACR,EC9BKW,EAAgBT,IAStB,EAPe,SAAC,GAAD,IAAEU,EAAF,EAAEA,OAAQC,EAAV,EAAUA,eAAV,OACX,iBAAK1B,UAAWC,EAAAA,OAAhB,WACI,kBAAO0B,QAASH,EAAhB,oCACA,SAACtB,EAAA,EAAD,CAAWC,KAAK,OAAOU,GAAIW,EAAe3B,MAAO4B,EAAQnB,SAAUoB,EAAgB1B,UAAWC,EAAAA,WAHvF,E,8BCPF2B,EAAc,SAAAC,GAAK,OAAIA,EAAMnB,SAASoB,KAAnB,E,UCWjB,SAASC,IAEpB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXvB,GAAWwB,EAAAA,EAAAA,IAAYC,GAEvBV,GAASS,EAAAA,EAAAA,KAAY,SAAAL,GAAK,OAAIA,EAAMJ,MAAV,KAEhCW,EAAAA,EAAAA,YAAU,WACRJ,EAASK,EAAAA,KACV,GAAC,CAACL,IAEL,IAyBOM,EAAkB5B,EAASe,QAAO,SAAAc,GAAO,OAC9CA,EAAQlD,KAAKmD,cAAcC,SAAShB,EAAOe,cADG,IAG9C,OACI,iBACEE,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,GACVC,MAAO,WAPX,WAWA,SAACC,EAAA,EAAD,CAAMxC,QAAQ,WAAd,UAAyB,SAACvB,EAAD,CAAUC,SAxCf,SAAA+D,GAExB,IAAMX,GAAO,QACX1B,GAAIE,KACDmC,GAKL,GAFyBxC,EAASyC,MAAK,SAAAC,GAAI,OAAIA,EAAK/D,OAASkD,EAAQlD,IAA1B,IAGzC,OAAOgE,MAAK,UAAKH,EAAK7D,KAAV,4BAGd2C,EAASK,EAAAA,GAA8BE,GACxC,OA2BK,sCACA,SAAC,EAAD,CAAQd,OAAQA,EAAQC,eAtBT,SAAA/B,GACnB,IAAM2D,EAAc3D,EAAEC,OAAOC,MAC5BmC,GAASuB,EAAAA,EAAAA,IAAUD,GACpB,KAoBI,SAAC,EAAD,CAAU5C,SAAU4B,EAAiB3B,gBA3BnB,SAAAE,GACtBmB,EAASK,EAAAA,GAAiCxB,GAC5C,MA4BD,C,+JCnEM,SAAS2C,EAAoBC,GAClC,OAAOC,EAAAA,EAAAA,GAAqB,UAAWD,EACxC,EACmBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,SAAvD,I,SCHMC,EAAY,CAAC,YAAa,UAoB1BC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,EAAO,CAC7B1E,KAAM,UACNoE,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,IAA1B,GAHJL,EAId,WACD,MAAO,CACLM,SAAU,SAEb,IAsDD,EArD0BC,EAAAA,YAAiB,SAAcC,EAASC,GAChE,IAAMN,GAAQO,EAAAA,EAAAA,GAAc,CAC1BP,MAAOK,EACPjF,KAAM,YAGJW,EAEEiE,EAFFjE,UADJ,EAGMiE,EADFQ,OAAAA,OAFJ,SAIEC,GAAQC,EAAAA,EAAAA,GAA8BV,EAAOL,GACzCgB,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGZ,EAAO,CACrCQ,OAAAA,IAEIK,EA/BkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKF,OAAOC,EAAAA,EAAAA,GAHO,CACZZ,KAAM,CAAC,SAEoBX,EAAqBsB,EACnD,CAuBiBE,CAAkBJ,GAClC,OAAoBK,EAAAA,EAAAA,KAAKpB,GAAUgB,EAAAA,EAAAA,GAAS,CAC1C7E,WAAWkF,EAAAA,EAAAA,GAAKJ,EAAQX,KAAMnE,GAC9BmF,UAAWV,EAAS,OAAIW,EACxBb,IAAKA,EACLK,WAAYA,GACXF,GACJ,G","sources":["webpack://react-homework-template/./src/components/phonebook/CardForm.module.css?edbb","components/phonebook/CardForm.jsx","webpack://react-homework-template/./src/components/phonebook/CardList.module.css?7a99","components/phonebook/CardList.jsx","webpack://react-homework-template/./src/components/phonebook/Filter.module.css?0cd6","../node_modules/nanoid/index.browser.js","components/phonebook/Filter.jsx","redux/contacts/contactsSelectors.js","pages/Contacts.jsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"CardForm_card__0G9gi\"};","import React, { useState } from \"react\";\nimport css from \"./CardForm.module.css\";\nimport { Button, TextField } from \"@mui/material\";\n\nexport default function CardForm({onSubmit}) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const fields = {name, number};\n\n    const handleInputChange = e => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }     \n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit(fields);\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    }\n\n        return (\n            <form onSubmit={handleSubmit} className={css.card}>\n                <TextField\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  onChange={handleInputChange}\n                  label=\"Name\"\n                />\n                <TextField \n                  type=\"tel\"\n                  name=\"number\"\n                  value={number}\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  onChange={handleInputChange}\n                  label=\"Number\"\n                />\n                <Button variant=\"contained\" type=\"submit\">Add contact</Button>\n          </form>\n        );\n}","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"CardList_user__zAbyi\",\"name\":\"CardList_name__HfBjA\"};","import React from \"react\";\nimport css from './CardList.module.css';\nimport { Button } from \"@mui/material\";\n\nconst CardList = ({contacts, onDeleteContact}) => (\n<ul>\n    {contacts.map(({id, name, number}) => (\n    <li key={id} className={css.user}>\n        <p className={css.name}>{name}: {number}</p>\n        <Button variant=\"outlined\" type=\"button\" onClick={() => onDeleteContact(id)}>Delete</Button>\n    </li>\n    ))}\n    </ul>\n);\n\nexport default CardList;","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__FHK1H\"};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React from \"react\";\nimport css from \"./Filter.module.css\";\nimport { nanoid } from \"nanoid\";\nimport { TextField } from \"@mui/material\";\n\nconst filterInputId = nanoid();\n\nconst Filter = ({filter, onChangeFilter}) => (\n    <div className={css.filter}>\n        <label htmlFor={filterInputId}>Find contacts by name</label>\n        <TextField type=\"text\" id={filterInputId} value={filter} onChange={onChangeFilter} className={css.search}/>\n    </div>\n)\n\nexport default Filter;","export const getContacts = state => state.contacts.items;","import React, { useEffect } from \"react\";\nimport CardForm from \"../components/phonebook/CardForm\";\nimport CardList from \"../components/phonebook/CardList\";\nimport Filter from \"../components/phonebook/Filter\";\nimport { nanoid } from \"nanoid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"../redux/contacts/filterReducer\";\nimport * as contactsOperations from \"../redux/contacts/contactsOperations\";\nimport * as contactsSelectors from \"../redux/contacts/contactsSelectors\";\nimport { Card } from \"@mui/material\";\n\nexport default function Contacts() {\n    \n    const dispatch = useDispatch();\n\n    const contacts = useSelector(contactsSelectors.getContacts);\n\n    const filter = useSelector(state => state.filter);\n\n    useEffect(() => {\n      dispatch(contactsOperations.fetchContacts());\n    },[dispatch])\n\n  const formSubmitHandler = data => {\n\n    const contact = {\n      id: nanoid(),\n      ...data\n    }\n\n    const dublicateContact = contacts.find(item => item.name === contact.name)\n\n    if (dublicateContact) {\n      return alert (`${data.name} is already in contacts` )\n    }\n\n    dispatch(contactsOperations.addContact(contact));\n  }\n\n  const onDeleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n }\n \n  const changeFilter = e => {\n    const filterValue = e.target.value\n     dispatch(setFilter(filterValue));\n   }\n\n   const visibleContacts = contacts.filter(contact => \n    contact.name.toLowerCase().includes(filter.toLowerCase()));\n\n    return (\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            fontSize: 40,\n            color: '#010101'\n          }}\n        >\n\n        <Card variant=\"outlined\"><CardForm onSubmit={formSubmitHandler}/></Card>\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChangeFilter={changeFilter}/>\n        <CardList contacts={visibleContacts} onDeleteContact={onDeleteContact}/>\n        </div>\n      );\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["CardForm","onSubmit","useState","name","setName","number","setNumber","fields","handleInputChange","e","target","value","reset","preventDefault","className","css","TextField","type","pattern","title","onChange","label","Button","variant","contacts","onDeleteContact","map","id","onClick","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","filterInputId","filter","onChangeFilter","htmlFor","getContacts","state","items","Contacts","dispatch","useDispatch","useSelector","contactsSelectors","useEffect","contactsOperations","visibleContacts","contact","toLowerCase","includes","style","display","flexDirection","justifyContent","alignItems","fontSize","color","Card","data","find","item","alert","filterValue","setFilter","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined"],"sourceRoot":""}