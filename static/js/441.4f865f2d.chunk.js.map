{"version":3,"file":"static/js/441.4f865f2d.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/phonebook/CardForm.module.css?edbb","components/phonebook/CardForm.jsx","webpack://react-homework-template/./src/components/phonebook/CardList.module.css?7a99","components/phonebook/CardList.jsx","webpack://react-homework-template/./src/components/phonebook/Filter.module.css?0cd6","components/phonebook/Filter.jsx","redux/contacts/contactsSelectors.js","../node_modules/@mui/material/styles/getOverlayAlpha.js","../node_modules/@mui/material/Paper/paperClasses.js","../node_modules/@mui/material/Paper/Paper.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","pages/Contacts.jsx"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"CardForm_label__03vuY\"};","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport css from \"./CardForm.module.css\";\nimport { Button } from \"@mui/material\";\n\nexport default function CardForm({onSubmit}) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const nameInputId = nanoid();\n    const numberInputId = nanoid();\n\n    const fields = {name, number};\n\n    const handleInputChange = e => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }     \n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit(fields);\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    }\n\n        return (\n            <form onSubmit={handleSubmit}>\n            <label htmlFor={nameInputId} className={css.label}>\n              Name\n              </label>\n                <input\n                  type=\"text\"\n                  id={nameInputId}\n                  name=\"name\"\n                  value={name}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  required\n                  onChange={handleInputChange}\n                />\n            <label htmlFor={numberInputId} className={css.label}>\n              Number\n            </label>\n                <input \n                  type=\"tel\"\n                  id={numberInputId} \n                  name=\"number\"\n                  value={number}\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required \n                  onChange={handleInputChange}\n                />\n                <Button variant=\"contained\" type=\"submit\">Add contact</Button>\n          </form>\n        );\n}","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"CardList_user__zAbyi\",\"name\":\"CardList_name__HfBjA\"};","import React from \"react\";\nimport css from './CardList.module.css';\nimport { Button } from \"@mui/material\";\n\nconst CardList = ({contacts, onDeleteContact}) => (\n<ul>\n    {contacts.map(({id, name, number}) => (\n    <li key={id} className={css.user}>\n        <p className={css.name}>{name}: {number}</p>\n        <Button variant=\"outlined\" type=\"button\" onClick={() => onDeleteContact(id)}>Delete</Button>\n    </li>\n    ))}\n    </ul>\n);\n\nexport default CardList;","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__FHK1H\"};","import React from \"react\";\nimport css from \"./Filter.module.css\";\nimport { nanoid } from \"nanoid\";\n\nconst filterInputId = nanoid();\n\nconst Filter = ({filter, onChangeFilter}) => (\n    <div className={css.filter}>\n        <label htmlFor={filterInputId}>Find contacts by name</label>\n        <input type=\"text\" id={filterInputId} value={filter} onChange={onChangeFilter}/>\n    </div>\n)\n\nexport default Filter;","export const getContacts = state => state.contacts.items;","// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n  return (alphaValue / 100).toFixed(2);\n};\nexport default getOverlayAlpha;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getPaperUtilityClass(slot) {\n  return generateUtilityClass('MuiPaper', slot);\n}\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\nexport default paperClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"elevation\", \"square\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport getOverlayAlpha from '../styles/getOverlayAlpha';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport { getPaperUtilityClass } from './paperClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\nconst PaperRoot = styled('div', {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$vars$overlays;\n  return _extends({\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    color: (theme.vars || theme).palette.text.primary,\n    transition: theme.transitions.create('box-shadow')\n  }, !ownerState.square && {\n    borderRadius: theme.shape.borderRadius\n  }, ownerState.variant === 'outlined' && {\n    border: `1px solid ${(theme.vars || theme).palette.divider}`\n  }, ownerState.variant === 'elevation' && _extends({\n    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]\n  }, !theme.vars && theme.palette.mode === 'dark' && {\n    backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(ownerState.elevation))}, ${alpha('#fff', getOverlayAlpha(ownerState.elevation))})`\n  }, theme.vars && {\n    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]\n  }));\n});\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n  const {\n      className,\n      component = 'div',\n      elevation = 1,\n      square = false,\n      variant = 'elevation'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n  return /*#__PURE__*/_jsx(PaperRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n    return null;\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import React, { useEffect } from \"react\";\nimport CardForm from \"../components/phonebook/CardForm\";\nimport CardList from \"../components/phonebook/CardList\";\nimport Filter from \"../components/phonebook/Filter\";\nimport { nanoid } from \"nanoid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"../redux/contacts/filterReducer\";\nimport * as contactsOperations from \"../redux/contacts/contactsOperations\";\nimport * as contactsSelectors from \"../redux/contacts/contactsSelectors\";\nimport { Card } from \"@mui/material\";\n\nexport default function Contacts() {\n    \n    const dispatch = useDispatch();\n\n    const contacts = useSelector(contactsSelectors.getContacts);\n\n    const filter = useSelector(state => state.filter);\n\n    useEffect(() => {\n      dispatch(contactsOperations.fetchContacts());\n    },[dispatch])\n\n  const formSubmitHandler = data => {\n\n    const contact = {\n      id: nanoid(),\n      ...data\n    }\n\n    const dublicateContact = contacts.find(item => item.name === contact.name)\n\n    if (dublicateContact) {\n      return alert (`${data.name} is already in contacts` )\n    }\n\n    dispatch(contactsOperations.addContact(contact));\n  }\n\n  const onDeleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n }\n \n  const changeFilter = e => {\n    const filterValue = e.target.value\n     dispatch(setFilter(filterValue));\n   }\n\n   const visibleContacts = contacts.filter(contact => \n    contact.name.toLowerCase().includes(filter.toLowerCase()));\n\n    return (\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            fontSize: 40,\n            color: '#010101'\n          }}\n        >\n\n        <Card variant=\"outlined\"><CardForm onSubmit={formSubmitHandler}/></Card>\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChangeFilter={changeFilter}/>\n        <CardList contacts={visibleContacts} onDeleteContact={onDeleteContact}/>\n        </div>\n      );\n}"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","CardForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","numberInputId","fields","handleInputChange","e","target","value","reset","preventDefault","htmlFor","className","css","type","pattern","title","required","onChange","Button","variant","contacts","onDeleteContact","map","onClick","filterInputId","filter","onChangeFilter","getContacts","state","items","elevation","Math","log","toFixed","getPaperUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","PaperRoot","styled","overridesResolver","props","styles","ownerState","root","square","rounded","_theme$vars$overlays","theme","_extends","backgroundColor","vars","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","boxShadow","shadows","mode","backgroundImage","alpha","getOverlayAlpha","overlays","React","inProps","ref","useThemeProps","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","undefined","Contacts","dispatch","useDispatch","useSelector","contactsSelectors","useEffect","contactsOperations","visibleContacts","contact","toLowerCase","includes","style","display","flexDirection","justifyContent","alignItems","fontSize","data","find","item","alert","filterValue","setFilter"],"sourceRoot":""}